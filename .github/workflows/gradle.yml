name: Master Build
on:
  workflow_dispatch:

  push:
    branches: [ master ]
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"

  pull_request:
    branches: [ master ]

concurrency:
  group: ${{ github.workflow }}-${{ github.event_name == 'pull_request' && github.head_ref || github.sha }}
  cancel-in-progress: true

jobs:
  gradleValidation:
    name: Gradle Wrapper
    runs-on: ubuntu-latest
    steps:
      - name: Fetch Sources
        uses: actions/checkout@v4

      - name: Gradle Wrapper Validation
        uses: gradle/actions/wrapper-validation@v4
        with:
          min-wrapper-count: 0

  build:
    name: Build ${{ matrix.tag }}
    runs-on: ${{ matrix.runner }}
    continue-on-error: ${{ matrix.ignore-errors }}
    strategy:
      matrix:
        os: ['linux']
        arch: ['amd64']
        runner: ['ubuntu-latest']
        tag: ['linux-amd64']
        ignore-errors: [false]
        include:
          - os: macos
            runner: macos-latest
            arch: amd64
            tag: darwin-amd64
            ignore-errors: true
          - os: macos
            runner: macos-14
            arch: aarch64
            tag: darwin-aarch64
            ignore-errors: true
          - os: windows
            runner: windows-latest
            arch: amd64
            tag: windows-amd64
            ignore-errors: true

    steps:
    - uses: actions/checkout@v4
    - name: Set up Git
      run: |
        git config --global user.email "$GITHUB_ACTOR@users.noreply.github.com"
        git config --global user.name "$GITHUB_ACTOR"
    - name: Setup JVM
      uses: actions/setup-java@v4
      with:
        distribution : zulu
        java-version: |
          21
          17
    - name : Setup Gradle
      uses : gradle/actions/setup-gradle@v4
    - run: ./gradlew build
#    - name: list build directory
#      if: ${{ always() }}
#      run: |
#        ls build

    - name: Upload Test Report
      uses: actions/upload-artifact@v4
      if: always() # always run even if the previous step fails
      with:
        name: junit-test-results-${{ matrix.tag }}
        path: '**/build/test-results/test/TEST-*.xml'
        retention-days: 1

  # This job will update the PR with the JUnit report
  # In order to be able to make the most of it this job in particular has
  # augmented permissions.
  junit-report:
    name: JUnit Report ${{ matrix.tag }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        tag: ['linux-amd64', 'darwin-amd64', 'darwin-aarch64', 'windows-amd64']
    if: |
      success() || failure()
    needs: [ build ]
    permissions:
      checks: write # for mikepenz/action-junit-report

    steps:
      - name: Download Test Report
        uses: actions/download-artifact@v5
        with:
          name: junit-test-results-${{ matrix.tag }}
      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v5
        with:
          check_name: Test Report - ${{ matrix.tag }}
          commit: ${{github.event.workflow_run.head_sha}}
          report_paths: '**/build/test-results/test/TEST-*.xml'

  publish:
    name: Publish snapshots
    runs-on: ubuntu-latest
    needs: build
    if: success() && github.event_name != 'pull_request' && github.ref == 'refs/heads/master'
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: Setup JVM
      uses: actions/setup-java@v4
      with:
        distribution : zulu
        java-version: |
          21
          17
    - name : Setup Gradle
      uses : gradle/actions/setup-gradle@v4
    - run: ./gradlew snapshot -Ppublish.central=true
      env:
        ORG_GRADLE_PROJECT_signingKey: ${{ secrets.ORG_GRADLE_PROJECT_SIGNINGKEY }}
        ORG_GRADLE_PROJECT_signingPassword: ${{ secrets.ORG_GRADLE_PROJECT_SIGNINGPASSWORD }}
        ORG_GRADLE_PROJECT_ossrhUsername: ${{ secrets.ORG_GRADLE_PROJECT_OSSRHUSERNAME }}
        ORG_GRADLE_PROJECT_ossrhPassword: ${{ secrets.ORG_GRADLE_PROJECT_OSSRHPASSWORD }}
